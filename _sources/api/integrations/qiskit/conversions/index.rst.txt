:py:mod:`integrations.qiskit.conversions`
=========================================

.. py:module:: integrations.qiskit.conversions


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   integrations.qiskit.conversions.export_to_qiskit
   integrations.qiskit.conversions.import_from_qiskit
   integrations.qiskit.conversions.qiskitpauli_to_qubitop
   integrations.qiskit.conversions.qubitop_to_qiskitpauli



.. py:function:: export_to_qiskit(circuit: orquestra.quantum.circuits._circuit.Circuit) -> qiskit.QuantumCircuit


.. py:function:: import_from_qiskit(circuit: qiskit.QuantumCircuit) -> orquestra.quantum.circuits._circuit.Circuit


.. py:function:: qiskitpauli_to_qubitop(qiskit_pauli: qiskit.opflow.SummedOp) -> orquestra.quantum.openfermion.QubitOperator

   Convert a qiskit's SummedOp to an OpenFermion QubitOperator.

   :param qiskit_pauli: operator to convert

   :returns: QubitOperator representing the SummedOp


.. py:function:: qubitop_to_qiskitpauli(qubit_operator: orquestra.quantum.openfermion.QubitOperator) -> qiskit.opflow.SummedOp

   Convert a OpenFermion QubitOperator to a SummedOp.

   :param qubit_operator: OpenFermion QubitOperator to convert

   :returns: SummedOp representing the qubit operator


