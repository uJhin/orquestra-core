:orphan:

:py:mod:`quantum.testing._initialize`
=====================================

.. py:module:: quantum.testing._initialize


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   quantum.testing._initialize.create_random_qubitop
   quantum.testing._initialize.create_random_isingop
   quantum.testing._initialize.create_random_wavefunction



.. py:function:: create_random_qubitop(nqubits, nterms, seed=None)

   Generates random qubit operator acting on nqubits with nterms for testing
   purposes.

   The resulting qubit operator it saved to file in JSON format under 'qubitop.json'.

   :param nqubits: integer
                   The number of qubits in the qubit operator
   :param nterms: integer
                  The number of terms in the qubit operator
   :param \*\** OPTIONAL ***:
   :param seed: integer
                The see for the random number generator

   :returns:

             None, a Qubit Operator (openfermion.QubitOperator) object is saved under
                 'qubitop.json'


.. py:function:: create_random_isingop(nqubits, nterms, seed=None)

   Generates random ising operator acting on nqubits with nterms for testing
       purposes.

   :param nqubits: integer
                   The number of qubits in the qubit operator
   :param nterms: integer
                  The number of terms in the qubit operator
   :param \*\** OPTIONAL ***:
   :param seed: integer
                The see for the random number generator

   :returns: an Ising Operator (openfermion.IsingOperator) object


.. py:function:: create_random_wavefunction(n_qubits, seed=None)


