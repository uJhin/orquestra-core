:py:mod:`quantum.openfermion.utils.indexing`
============================================

.. py:module:: quantum.openfermion.utils.indexing

.. autoapi-nested-parse::

   Defines index mappings.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   quantum.openfermion.utils.indexing.up_index
   quantum.openfermion.utils.indexing.down_index
   quantum.openfermion.utils.indexing.up_then_down



.. py:function:: up_index(index)

   Function to return up-orbital index given a spatial orbital index.

   :param index: spatial orbital index
   :type index: int

   :returns: An integer representing the index of the associated spin-up orbital


.. py:function:: down_index(index)

   Function to return down-orbital index given a spatial orbital index.

   :param index: spatial orbital index
   :type index: int

   :returns: An integer representing the index of the associated spin-down orbital


.. py:function:: up_then_down(mode_idx, num_modes)

   up then down reordering, given the operator has the default even-odd
    ordering. Otherwise this function will reorder indices where all even
    indices now come before odd indices.

    Example:
        0,1,2,3,4,5 -> 0,2,4,1,3,5

   The function takes in the index of the mode that will be relabeled and
   the total number modes.

   :param mode_idx: the mode index that is being reordered
   :type mode_idx: int
   :param num_modes: the total number of modes of the operator.
   :type num_modes: int

   Returns (int): reordered index of the mode.


